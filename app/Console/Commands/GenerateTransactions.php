<?php

namespace App\Console\Commands;

use Illuminate\Console\Command;
use Illuminate\Support\Facades\DB;
use Illuminate\Support\Facades\Validator;

class GenerateTransactions extends Command
{
    /**
     * The name and signature of the console command.
     *
     * @var string
     */
    protected $signature = 'transaction:build';

    /**
     * The console command description.
     *
     * @var string
     */
    protected $description = 'Build Transactions';

    /**
     * Create a new command instance.
     *
     * @return void
     */
    public function __construct()
    {
        parent::__construct();
    }

    /**
     * Execute the console command.
     *
     * @return int
     */
    public function handle()
    {
        DB::table('transactions')->delete();
        \App\SaleOrder::where('status','Draft')->update(['invoiced_at' => NULL,'payment_status' => 'Unsettled']);
        \App\SaleOrder::where('revisit',0)->whereNotNull('invoiced_at')->update(['payment_status' => 'Settled']);
        \App\SaleOrder::where('revisit',1)->update(['payment_status' => 'Unsettled']);
        $sale_orders = \App\SaleOrder::where('payment_status','Settled')->get();
        $bar = $this->output->createProgressBar(count($sale_orders));

        $bar->start();
        foreach($sale_orders as $saleOrder)
        {
            $today_date = \Carbon\Carbon::parse($saleOrder->invoiced_at)->format('ymd');
            $serial_no = 'TR'.$today_date.'0000';
            $sn_val_arr['serial_no'] = $serial_no;
            $count = 0;
            while(Validator::make($sn_val_arr,['serial_no'=>'unique:transactions,serial_no'])->fails()){
                $serial_no = substr($serial_no, 0, -4);
                $count = $count + 1;
                $serial_no = $serial_no.str_pad($count, 4,0,STR_PAD_LEFT);
                $sn_val_arr['serial_no'] = $serial_no;
            }
            \App\Transaction::create([
                'serial_no' => $serial_no,
                'customer_id' => $saleOrder->customer_id,
                'type' => 'settlement',
                'payable_id' => $saleOrder->id,
                'payable_type' => 'App\SaleOrder',
                'amount' => $saleOrder->total,
                'payment_via' => 'default',
                'remarks' => '<p>Generated by system</p>',
                'created_by_id' => 1,
                'created_at' => \Carbon\Carbon::parse($saleOrder->invoiced_at)->addMinutes(1)->timestamp
            ]);
            $bar->advance();
        }
        $bar->finish();
    }
}
